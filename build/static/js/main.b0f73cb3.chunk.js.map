{"version":3,"sources":["components/post.js","components/login.js","components/register.js","components/featuredmessageform.js","components/postdetails.js","components/editpostform.js","components/userposts.js","components/newmessageform.js","components/messages.js","components/profile.js","index.js"],"names":["Posts","props","useState","posts","setPosts","setFeaturedResult","isLoggedIn","userToken","setIsLoggedIn","clickedMessage","setUsername","searchTerm","setSearchTerm","useEffect","console","log","fetch","headers","then","response","json","result","username","data","i","length","author","isAuthor","catch","error","a","resp","fetchPosts","filteredPosts","filter","post","text","title","toLowerCase","includes","postMatches","postsToDisplay","className","onChange","event","target","value","map","onClick","preventDefault","location","description","_id","Login","setUserToken","usernameString","setUsernameString","passwordString","setPasswordString","type","password","method","body","JSON","stringify","user","token","localStorage","setItem","Register","success","Featuredmessageform","messageContent","setContent","renderMessageForm","recipientUsername","recipientTitle","postId","getItem","Postdetails","featuredResult","setPostId","setRecipientUsername","setRecipientTitle","logoutUser","removeItem","price","willDeliver","Editpostform","myPostTitle","setWantsToEdit","wantsToEdit","titleString","setTitleString","descriptionString","setDescriptionString","priceString","setPriceString","locationString","setLocationString","setWillDeliver","editPost","Userposts","myPosts","setMyPosts","setMyPostTitle","fetchMyPosts","id","newPost","Newmessageform","Messages","messages","setMessages","fetchMessages","message","index","fromUser","content","disabled","Profile","src","to","path","exact","App","showRegister","setShowRegister","ReactDOM","render","document","getElementById"],"mappings":"8LAyEeA,EAtED,SAACC,GACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAA4EJ,EAA5EI,kBAAmBC,EAAyDL,EAAzDK,WAA2CC,GAAcN,EAA7CO,cAA6CP,EAA9BQ,eAA8BR,EAAdM,WACtE,EAAgCL,mBAAS,IAAzC,mBAAiBQ,GAAjB,WACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACNC,QAAQC,IAAI,UAAWR,GACvBS,MAAM,sEAAuE,CACzEC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BV,MAEhCW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GACF,IAAMC,EAAWD,EAAOE,KAAKD,SAC7BZ,EAAYY,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAIrB,EAAMsB,OAAQD,IAC1BrB,EAAMqB,GAAGE,OAAOJ,WAAaA,IAC7BnB,EAAMqB,GAAGG,UAAW,MAI/BC,MAAMd,QAAQe,OACH,uCAAG,gCAAAC,EAAA,sEACId,MAAM,oEADV,cACTe,EADS,gBAEIA,EAAKX,OAFT,OAETG,EAFS,OAGTpB,EAAQoB,EAAKA,KAAKpB,MACxBC,EAASD,GAJM,2CAAH,oDAMhB6B,KACD,CAAC1B,EAAYC,IAQhB,IAAM0B,EAAgB9B,EAAM+B,QAAO,SAAAC,GAAI,OANvC,SAAqBA,EAAMC,GACvB,GAAID,EAAKE,MAAMC,cAAcC,SAASH,EAAKE,eACvC,OAAO,EAI4BE,CAAYL,EAAMxB,MACvD8B,EAAiB9B,EAAWc,OAAS,EAAIQ,EAAgB9B,EAE/D,OAAO,qCACH,oBAAIuC,UAAU,YAAd,mBAGA,sBAAKA,UAAU,mBAAf,UACI,uBAAOA,UAAU,aAAjB,0BACA,uBAAOA,UAAU,cAAcC,SAAU,SAAAC,GAAK,OAAIhC,EAAcgC,EAAMC,OAAOC,aAGhFL,EAAeM,KAAI,SAAAZ,GAChB,OAAO,sBAAKO,UAAU,OAAsBM,QAAS,SAACJ,GAClDA,EAAMK,iBACNnC,QAAQC,IAAIoB,GACZrB,QAAQC,IAAIoB,EAAKR,UACjBtB,EAAkB8B,IAJf,UAMH,sBAAKO,UAAU,QAAf,qBAAgCP,EAAKE,SACrC,sBAAKK,UAAU,YAAf,uBAAsCP,EAAKT,OAAOJ,YAClD,sBAAKoB,UAAU,WAAf,wBAAsCP,EAAKe,YAC3C,sBAAKR,UAAU,cAAf,4BAA6CP,EAAKgB,YAAlD,SAT8BhB,EAAKiB,YCcpCC,EAlED,SAAC,GAA4D,IAA1D7C,EAAyD,EAAzDA,cAAsC8C,GAAmB,EAA1ChD,WAA0C,EAA9BC,UAA8B,EAAnB+C,cACnD,EAA4CpD,mBAAS,IAArD,mBAAOqD,EAAP,KAAuBC,EAAvB,KACA,EAA4CtD,mBAAS,IAArD,mBAAOuD,EAAP,KAAuBC,EAAvB,KA+BA,OACI,mCACI,sBAAKhB,UAAU,QAAf,UACI,uCAEA,uBAAOA,UAAU,gBACbiB,KAAK,WACLb,MAAOS,EACPZ,SAAU,SAAUC,GAChBY,EAAkBZ,EAAMC,OAAOC,UAIvC,uBAAOJ,UAAU,gBACbiB,KAAK,WACLb,MAAOW,EACPd,SAAU,SAAUC,GAChBc,EAAkBd,EAAMC,OAAOC,UAKvC,wBAAQJ,UAAU,WAAWM,QAAS,WAnDlD,IAAmB1B,EAAUsC,EAAVtC,EAoDOiC,EApDGK,EAoDaH,EAlDtCzC,MAAM,yEAA0E,CAC5E6C,OAAQ,OACR5C,QAAS,CACL,eAAgB,oBAEpB6C,KAAMC,KAAKC,UAAU,CACjBC,KAAM,CACF3C,SAAUA,EACVsC,SAAUA,OAGnB1C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GAKF,OAJAP,QAAQC,IAAIM,GACZb,GAAc,GACd8C,EAAajC,EAAOE,KAAK2C,OACzBC,aAAaC,QAAQ,QAAS/C,EAAOE,KAAK2C,OACnC7C,KAEVO,MAAMd,QAAQe,QA8BX,mBApBJ,IAwBoB,uBAAS,6BCK1BwC,EAjEE,SAAC,GAAqC,IAAnC7D,EAAkC,EAAlCA,cAAe8C,EAAmB,EAAnBA,aAC/B,EAA4CpD,mBAAS,IAArD,mBAAOqD,EAAP,KAAuBC,EAAvB,KACA,EAA4CtD,mBAAS,IAArD,mBAAOuD,EAAP,KAAuBC,EAAvB,KA8BA,OAEI,sBAAKhB,UAAU,WAAf,UAEI,0CAEA,uBAAOA,UAAU,gBACbiB,KAAK,WACLb,MAAOS,EACPZ,SAAU,SAACC,GACPY,EAAkBZ,EAAMC,OAAOC,UAIvC,uBAAOJ,UAAU,gBACbiB,KAAK,WACLb,MAAOW,EACPd,SAAU,SAACC,GACPc,EAAkBd,EAAMC,OAAOC,UAIvC,wBAAQJ,UAAU,cAAcM,QAC5B,WAnDZ,IAAsB1B,EAAUsC,EAAVtC,EAoDOiC,EApDGK,EAoDaH,EAlDzCzC,MAAM,4EAA6E,CAC/E6C,OAAQ,OACR5C,QAAS,CACL,eAAgB,oBAEpB6C,KAAMC,KAAKC,UAAU,CACjBC,KAAM,CACF3C,SAAUA,EACVsC,SAAUA,OAIjB1C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAOF,OANIA,EAAOiD,UACP9D,GAAc,GACd8C,EAAajC,EAAOE,KAAK2C,OACzBC,aAAaC,QAAQ,QAAS/C,EAAOE,KAAK2C,QAGvC7C,KAEVO,MAAMd,QAAQe,QA0Bf,0BCHG0C,EAnDa,SAACtE,GAEzB,MAAqCC,mBAAS,IAA9C,mBAAOsE,EAAP,KAAuBC,EAAvB,KACQC,EAAiEzE,EAAjEyE,kBAAmBC,EAA8C1E,EAA9C0E,kBAAmBC,EAA2B3E,EAA3B2E,eAAgBC,EAAW5E,EAAX4E,OACxDtE,EAAY4D,aAAaW,QAAQ,SAuBvC,OAAO,mCAEH,sBAAKpC,UAAU,sBAAf,UACI,uCAAUiC,EAAV,QACA,uBACA,yDAA4BC,EAA5B,OACA,uBACA,uBACA,iDACA,uBACA,uBAAOjC,SAAU,SAAUC,GACvB6B,EAAW7B,EAAMC,OAAOC,OACxBhC,QAAQC,IAAIyD,MAEhB,wBAAQ9B,UAAU,OAAOM,QAAS,WAlCtChC,MAAM,oEAAD,OAAqE6D,EAArE,aAAwF,CACzFhB,OAAQ,OACR5C,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYV,GAEjCuD,KAAMC,KAAKC,UAAU,CACjB,QAAW,CACP,QAAWQ,OAGpBtD,MAAK,SAAAG,GACJP,QAAQC,IAAIM,MACbO,MAAMd,QAAQe,OAuBT6C,GAAkB,IAFtB,kBAIA,wBAAQ1B,QAAS,WArBrB0B,GAAkB,IAqBd,0BCiBGK,EA7DK,SAAC9E,GACjB,IAAQ+E,EAAmF/E,EAAnF+E,eAAgBxE,EAAmEP,EAAnEO,cAAe8C,EAAoDrD,EAApDqD,aAAc7C,EAAsCR,EAAtCQ,eAAgBiE,EAAsBzE,EAAtByE,kBACrE,EAA4BxE,mBAAS,IAArC,mBAAO2E,EAAP,KAAeI,EAAf,KACA,EAAkD/E,mBAAS,IAA3D,mBAAOyE,EAAP,KAA0BO,EAA1B,KACA,EAA4ChF,mBAAS,IAArD,mBAAO0E,EAAP,KAAuBO,EAAvB,KACA,EAAgCjF,mBAAS,IAAzC,6BACkBiE,aAAaW,QAAQ,SAGvC,SAASM,IACL5E,GAAc,GACd8C,EAAa,IACba,aAAakB,WAAW,SAK5B,IAAKL,EACD,OAAQ,mCAAE,sBAAKtC,UAAU,cAAf,UACN,+CACA,sBAAMA,UAAU,eAAhB,yCACA,wBAAQA,UAAU,sBAAsBM,QAAS,WAC7CoC,KADJ,yBAMqDJ,EAArD3C,MAAqD2C,EAA9CM,MAA8CN,EAAvC9B,SAAuC8B,EAA7B7B,YAA6B6B,EAAhBO,YAE7C,OAAQ,mCACJ,sBAAK7C,UAAU,cAAf,UACI,+CAEA,gCACI,sBAAKA,UAAU,gBAAf,oBAAuCsC,EAAe3C,MAAtD,OACA,sBAAKK,UAAU,gBAAf,oBAAuCsC,EAAeM,SACtD,sBAAK5C,UAAU,sBAAf,0BAAmDsC,EAAe7B,eAClE,sBAAKT,UAAU,mBAAf,uBAA6CsC,EAAe9B,YAC5D,wBAAQR,UAAU,WAAWM,QACzB,WACI0B,GAAkB,GAClBO,EAAUD,EAAe5B,KACzB8B,EAAqBF,EAAetD,OAAOJ,UAC3C6D,EAAkBH,EAAe3C,OACjCvB,QAAQC,IAAI4D,GACZ7D,QAAQC,IAAI6D,IAPpB,mBAYA,wBAAQlC,UAAU,YAAYM,QAAS,WACnCoC,KADJ,oBAGC3E,EAAiB,cAAC,EAAD,CAAqBA,eAAgBA,EAAgBiE,kBAAmBA,EAAmBG,OAAQA,EAAQF,kBAAmBA,EAAmBC,eAAgBA,IAAqB,OApBnM,wBCwBNY,EAzDM,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,eAA6Bb,GAAa,EAA1Bc,YAA0B,EAAbd,QAExDtE,EAAY4D,aAAaW,QAAQ,SACvC,EAAsC5E,mBAAS,IAA/C,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAAkD3F,mBAAS,IAA3D,mBAAO4F,EAAP,KAA0BC,EAA1B,KACA,EAAsC7F,mBAAS,IAA/C,mBAAO8F,EAAP,KAAoBC,EAApB,KACA,EAA4C/F,mBAAS,IAArD,mBAAOgG,EAAP,KAAuBC,EAAvB,KACA,EAAsCjG,oBAAS,GAA/C,mBAAOqF,EAAP,KAAoBa,EAApB,KA6BA,OA5BAtF,QAAQC,IAAI8D,GA4BL,mCACH,sBAAKnC,UAAU,eAAf,UACI,qBAAIA,UAAU,eAAd,6BAA8C+C,KAC9C,uBAAO/C,UAAU,eAAjB,qBACA,uBAAOA,UAAU,iBAAiBiB,KAAK,OAAOb,MAAO8C,EAAajD,SAAU,SAAAC,GAAWiD,EAAejD,EAAMC,OAAOC,UACnH,uBAAOJ,UAAU,qBAAjB,2BACA,uBAAOA,UAAU,uBAAuBiB,KAAK,OAAOb,MAAOgD,EAAmBnD,SAAU,SAAAC,GAAWmD,EAAqBnD,EAAMC,OAAOC,UACrI,uBAAOJ,UAAU,eAAjB,qBACA,uBAAOA,UAAU,iBAAiBiB,KAAK,OAAOb,MAAOkD,EAAarD,SAAU,SAAAC,GAAWqD,EAAerD,EAAMC,OAAOC,UACnH,uBAAOJ,UAAU,kBAAjB,wBACA,uBAAOA,UAAU,oBAAoBiB,KAAK,OAAOb,MAAOoD,EAAgBvD,SAAU,SAAAC,GAAWuD,EAAkBvD,EAAMC,OAAOC,UAC5H,uBAAOJ,UAAU,qBAAjB,6BACA,uBAAOA,UAAU,2BAA2BiB,KAAK,WAAWb,MAAOyC,EAAa5C,SAAU,SAAAC,GAAK,OAAIwD,GAAe,MAClH,wBAAQ1D,UAAU,UAAUM,QAAS,YAvC7C,SAAkB4C,EAAaE,EAAmBE,EAAaE,EAAgBX,GAC3EvE,MAAM,oEAAD,OAAqE6D,GAAU,CAChFhB,OAAQ,QACR5C,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYV,GAEjCuD,KAAMC,KAAKC,UAAU,CACjB7B,KAAM,CACFE,MAAOuD,EACPzC,YAAa2C,EACbR,MAAOU,EACP9C,SAAUgD,EACVX,YAAaA,OAGtBrE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GACFP,QAAQC,IAAIM,MAqBmCgF,CAAST,EAAaE,EAAmBE,EAAaE,EAAgBX,IAAzH,uBACA,wBAAQ7C,UAAU,gBAAgBM,QAlB1C,WACI0C,GAAe,IAiBX,0BC4DGY,EA7GG,SAAC,GAAiB,IAAhB/F,EAAe,EAAfA,UAChB,EAA8BL,mBAAS,IAAvC,mBAAOqG,EAAP,KAAgBC,EAAhB,KAEA,EAAsCtG,mBAAS,IAA/C,mBAAO0F,EAAP,KAAoBC,EAApB,KACA,EAAkD3F,mBAAS,IAA3D,mBAAO4F,EAAP,KAA0BC,EAA1B,KACA,EAAsC7F,mBAAS,IAA/C,mBAAO8F,EAAP,KAAoBC,EAApB,KACA,EAA4C/F,mBAAS,IAArD,mBAAOgG,EAAP,KAAuBC,EAAvB,KACA,EAAsCjG,oBAAS,GAA/C,mBAAOqF,EAAP,KAAoBa,EAApB,KACA,EAAsClG,oBAAS,GAA/C,mBAAOyF,EAAP,KAAoBD,EAApB,KACA,EAAsCxF,mBAAS,IAA/C,mBAAOuF,EAAP,KAAoBgB,EAApB,KACA,EAA4BvG,mBAAS,IAArC,mBAAO2E,EAAP,KAAeI,EAAf,KAyDA,OAtDApE,qBAAU,YACY,uCAAG,gCAAAiB,EAAA,sEACEd,MAAM,sEAAuE,CAC5F6C,OAAQ,MACR5C,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYV,KALpB,cACXwB,EADW,gBAQEA,EAAKX,OARP,OAQXG,EARW,OASXgF,EAAUhF,EAAKA,KAAKpB,MAC1BqG,EAAWD,GAVM,2CAAH,qDAYlBG,KACD,IAwCK,mCACJ,sBAAKhE,UAAU,aAAf,UAEI,sBAAKA,UAAU,UAAf,UACI,0CACC6D,EAAQxD,KAAI,SAAAZ,GAAI,OAAI,gCACjB,sBAAKO,UAAU,YAAf,qBAAoCP,EAAKE,MAAzC,OACA,sBAAKK,UAAU,kBAAf,2BAAgDP,EAAKgB,YAArD,QACA,sBAAKT,UAAU,YAAf,qBAAoCP,EAAKmD,MAAzC,QACA,sBAAK5C,UAAU,eAAf,wBAA0CP,EAAKe,YAC/C,wBAAQR,UAAU,cAAcM,QAAS,WAAc0C,GAAe,GAAO5E,QAAQC,IAAIoB,EAAKiB,KAAMqD,EAAetE,EAAKE,OAAQ4C,EAAU9C,EAAKiB,MAA/I,kBACA,wBAAQV,UAAU,gBAAgBM,QAAS,WAAciC,EAAU9C,EAAKiB,KAxBpFpC,MAAM,oEAAD,OAAqE6D,GAAU,CAChFhB,OAAQ,SACR5C,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYV,KAElCW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GACFP,QAAQC,IAAIM,OAgBR,sBAN2Bc,EAAKiB,WAWvCuC,EAAc,cAAC,EAAD,CAAcF,YAAaA,EAAaE,YAAaA,EAAaD,eAAgBA,EAAgBb,OAAQA,IAAa,KAEtI,sBAAKnC,UAAU,UAAf,UACI,oBAAIA,UAAU,mBAAd,6BACA,uBAAOA,UAAU,WAAjB,mBACA,uBAAOA,UAAU,aAAaiB,KAAK,OAAOb,MAAO8C,EAAajD,SAAU,SAAAC,GAAWiD,EAAejD,EAAMC,OAAOC,UAC/G,uBAAOJ,UAAU,iBAAjB,yBACA,uBAAOA,UAAU,mBAAmBiB,KAAK,OAAOb,MAAOgD,EAAmBnD,SAAU,SAAAC,GAAWmD,EAAqBnD,EAAMC,OAAOC,UACjI,uBAAOJ,UAAU,WAAjB,mBACA,uBAAOA,UAAU,aAAaiB,KAAK,OAAOb,MAAOkD,EAAarD,SAAU,SAAAC,GAAWqD,EAAerD,EAAMC,OAAOC,UAC/G,uBAAOJ,UAAU,cAAjB,sBACA,uBAAOA,UAAU,gBAAgBiB,KAAK,OAAOb,MAAOoD,EAAgBvD,SAAU,SAAAC,GAAWuD,EAAkBvD,EAAMC,OAAOC,UACxH,uBAAOJ,UAAU,iBAAjB,4BAEA,uBAAOiE,GAAG,uBAAuBhD,KAAK,WAAWhB,SAAU,SAAUC,GAASwD,GAAe,MAG7F,wBAAQ1D,UAAU,YAAYM,QAAS,YAvEnD,SAAiB4C,EAAaE,EAAmBE,EAAaE,EAAgBX,GAC1EvE,MAAM,mEAAoE,CACtE6C,OAAQ,OACR5C,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYV,GAEjCuD,KAAMC,KAAKC,UAAU,CACjB7B,KAAM,CACFE,MAAOuD,EACPzC,YAAa2C,EACbR,MAAOU,EACP9C,SAAUgD,EACVX,YAAaA,OAGtBrE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAG,GACFP,QAAQC,IAAIM,MAqDyCuF,CAAQhB,EAAaE,EAAmBE,EAAaE,EAAgBX,IAA1H,kCC9CDsB,EAvDQ,SAAC5G,GACpB,MAAqCC,mBAAS,IAA9C,mBAAOsE,EAAP,KAAuBC,EAAvB,KACwBC,GAAiEzE,EAAjFQ,eAAiFR,EAAjEyE,mBAAmBC,EAA8C1E,EAA9C0E,kBAAmBC,EAA2B3E,EAA3B2E,eAAgBC,EAAW5E,EAAX4E,OACxEtE,EAAY4D,aAAaW,QAAQ,SAuBvC,OAAO,mCAEH,sBAAKpC,UAAU,iBAAf,UACI,wCAAWiC,EAAX,QACA,uBACA,yDAA4BC,EAA5B,OACA,uBACA,uBACA,iDACA,uBACA,uBAAOjC,SAAU,SAAUC,GACvB6B,EAAW7B,EAAMC,OAAOC,OACxBhC,QAAQC,IAAIyD,MAEhB,wBAAQ9B,UAAU,OAAOM,QAAS,WAlCtChC,MAAM,oEAAD,OAAqE6D,EAArE,aAAwF,CACzFhB,OAAQ,OACR5C,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYV,GAEjCuD,KAAMC,KAAKC,UAAU,CACjB,QAAW,CACP,QAAWQ,OAGpBtD,MAAK,SAAAG,GACJP,QAAQC,IAAIM,MACbO,MAAMd,QAAQe,OAuBT6C,GAAkB,IAFtB,kBAIA,wBAAQ1B,QAAS,WArBrB0B,GAAkB,IAqBd,0BCoBGoC,EAhEE,SAAC,GAAiB,IAAhBvG,EAAe,EAAfA,UAGf,EAAgCL,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAA4C9G,oBAAS,GAArD,mBAAOO,EAAP,KAAuBiE,EAAvB,KACA,EAA4BxE,mBAAS,IAArC,mBAAO2E,EAAP,KAAeI,EAAf,KACA,EAAkD/E,mBAAS,IAA3D,mBAAOyE,EAAP,KAA0BO,EAA1B,KACA,EAA4ChF,mBAAS,IAArD,mBAAO0E,EAAP,KAAuBO,EAAvB,KACA,EAAgCjF,mBAAS,IAAzC,mBAAOoB,EAAP,KAAiBZ,EAAjB,KAsBA,OApBAG,qBAAU,YACa,uCAAG,sBAAAiB,EAAA,sEACCd,MAAM,sEAAuE,CAC5F6C,OAAQ,MACR5C,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BV,MAG9BW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAMC,EAAWD,EAAOE,KAAKD,SAC7BZ,EAAYY,GACZ,IAAMyF,EAAW1F,EAAOE,KAAKwF,SAC7BC,EAAYD,MAbF,yDAAH,qDAgBnBE,KACD,IAEI,qCACH,sBAAKvE,UAAU,kBAAf,UAEI,sBAAKA,UAAU,WAAf,UACI,oBAAIA,UAAU,YAAd,sBACCqE,EAAShE,KAAI,SAACmE,EAASC,GACpB,OAAO,mCAEH,sBAAKzE,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,mBAAqCwE,EAAQE,SAAS9F,YACtD,sBAAKoB,UAAU,YAAf,oBAAmCwE,EAAQ/E,KAAKE,MAAhD,OACA,sBAAKK,UAAU,kBAAf,oBAAyCwE,EAAQG,QAAjD,OACCH,EAAQE,SAAS9F,WAAaA,EAAW,KACtC,wBAAQoB,UAAU,YAAY4E,SAAU7G,EAAgBuC,QAAS,WAC7DiC,EAAUiC,EAAQ/E,KAAKiB,KACvBtC,QAAQC,IAAI8D,GAEZK,EAAqBgC,EAAQE,SAAS9F,UACtC6D,EAAkB+B,EAAQ/E,KAAKE,OAC/BvB,QAAQC,IAAI4D,GACZ7D,QAAQC,IAAImG,EAAQE,SAAS9F,UAC7BoD,GAAkB,IARtB,qBALsByC,WAoB1C,qBAAKzE,UAAU,qBAAf,SACKjC,EAAiB,cAAC,EAAD,CAAgBkE,kBAAmBA,EAAmBC,eAAgBA,EAAgBC,OAAQA,EAAQI,UAAWA,EAAWxE,eAAgBA,EAAgBiE,kBAAmBA,IAAwB,UA7B9N,QCKI6C,EA9BC,SAAC,GAAiB,IAAhBhH,EAAe,EAAfA,UAEd,EAA4CL,qBAA5C,mBAAOO,EAAP,KAAuBiE,EAAvB,KACA,OACI,cAAC,IAAD,UACI,gCACI,qBAAKhC,UAAU,OAAO8E,IAAI,kCAC1B,sBAAK9E,UAAU,OAAf,UACI,qBAAKA,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAM+E,GAAG,IAAT,oBAC1B,qBAAK/E,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAM+E,GAAG,WAAT,wBAC1B,qBAAK/E,UAAU,cAAf,SAA6B,cAAC,IAAD,CAAM+E,GAAG,cAAT,2BAGjC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACI,cAAC,EAAD,CAAWnH,UAAWA,MAE1B,eAAC,IAAD,CAAOmH,KAAK,cAAZ,UACI,cAAC,EAAD,CAAUnH,UAAWA,IACpBE,EAAiB,cAAC,EAAD,CAAgBA,eAAgBA,EAAgBiE,kBAAmBA,EAAmBF,eAAgBA,eAAgBC,WAAYA,aAAiB,QAEzK,cAAC,IAAD,CAAOkD,OAAK,EAACD,KAAK,IAAlB,SACI,qBAAKhF,UAAU,UAAf,kDCnBlBkF,EAAM,WACV,MAAoC1H,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBE,EAAnB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOK,EAAP,KAAkB+C,EAAlB,KACA,EAA4CpD,mBAAS,MAArD,mBAAO8E,EAAP,KAAuB3E,EAAvB,KACA,EAA4CH,oBAAS,GAArD,mBAAOO,EAAP,KAAuBiE,EAAvB,KACA,EAAwCxE,oBAAS,GAAjD,mBAAO2H,EAAP,KAAqBC,EAArB,KASA,OAPAjH,qBAAU,WAEFsD,aAAaW,QAAQ,UACvBxB,EAAca,aAAaW,QAAQ,YAEtC,CAACvE,IAEG,sBAAKoG,GAAG,MAAR,UACL,sBAAKjE,UAAU,qBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CACEpC,WAAYA,EACZE,cAAeA,EACfD,UAAWA,EACX+C,aAAcA,EACd0B,eAAgBA,EAChB3E,kBAAmBA,EACnBI,eAAgBA,EAChBiE,kBAAmBA,MAIvB,qBAAKhC,UAAU,gBAAf,SACE,eAAC,IAAD,WACInC,EAAY,cAAC,EAAD,CAAayE,eAAgBA,EAAgB3E,kBAAmBA,EAAmBC,WAAYA,EAAYE,cAAeA,EACtID,UAAWA,EAAW+C,aAAcA,EAAc7C,eAAgBA,EAAgBiE,kBAAmBA,IAAwB,cAAC,EAAD,CAAOpE,WAAYA,EAC9IE,cAAeA,EAAeD,UAAWA,EAAW+C,aAAcA,IAEtE,qBAAKZ,UAAU,SAAf,SACGpC,EAAa,qDACZ,6BACE,cAAC,IAAD,UACGuH,EACC,cAAC,EAAD,CACEvH,WAAYA,EACZE,cAAeA,EACfD,UAAWA,EACX+C,aAAcA,IACd,cAAC,IAAD,CAAMZ,UAAU,cAAcM,QAAS,WACvC8E,GAAgB,GAChBhH,QAAQC,IAAI8G,IAFZ,6DAclB,qBAAKnF,UAAU,qBAAf,SACGpC,GAAYC,EAAY,cAAC,EAAD,CACvBE,eAAgBA,EAAgBiE,kBAAmBA,EAAmBlE,cAAeA,EAAeF,WAAYE,EAAe8C,aAAcA,EAAc/C,UAAWA,IAAgB,WAK9LwH,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.b0f73cb3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\nconst Posts = (props) => {\n    const [posts, setPosts] = useState([])\n    const { setFeaturedResult, isLoggedIn, setIsLoggedIn, clickedMessage, userToken } = props\n    const [username, setUsername] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n\n    useEffect(() => {\n        console.log('Bearer ', userToken)\n        fetch('https://strangers-things.herokuapp.com/api/2105-VPI-WEB-PT/users/me', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${userToken}`\n            },\n        }).then(response => response.json())\n            .then(result => {\n                const username = result.data.username\n                setUsername(username);\n                for (let i = 0; i < posts.length; i++) {\n                    if (posts[i].author.username === username) {\n                        posts[i].isAuthor = true;\n                    }\n                }\n            })\n            .catch(console.error)\n        const fetchPosts = async () => {\n            const resp = await fetch('https://strangers-things.herokuapp.com/api/2105-VPI-WEB-PT/posts')\n            const data = await resp.json()\n            const posts = data.data.posts\n            setPosts(posts)\n        }\n        fetchPosts();\n    }, [isLoggedIn, userToken])\n\n    function postMatches(post, text) {\n        if (post.title.toLowerCase().includes(text.toLowerCase())) {\n            return true\n        }\n    }\n\n    const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n    const postsToDisplay = searchTerm.length > 0 ? filteredPosts : posts;\n\n    return <>\n        <h1 className=\"posttitle\">\n            Posts\n        </h1>\n        <div className=\"SearchEverything\">\n            <label className=\"SearchText\">Search Posts</label>\n            <input className=\"SearchInput\" onChange={event => setSearchTerm(event.target.value)}></input>\n        </div>\n\n        {postsToDisplay.map(post => {\n            return <div className=\"post\" key={post._id} onClick={(event) => {\n                event.preventDefault();\n                console.log(post)\n                console.log(post.isAuthor)\n                setFeaturedResult(post)\n            }} >\n                <div className='title'> Title: {post.title}</div>\n                <div className='usernamee'> Post By: {post.author.username}</div>\n                <div className='location'> Location: {post.location}</div>\n                <div className='description'> Description:  {post.description} </div>\n\n            </div>\n        })\n        }\n    </>\n\n}\n\nexport default Posts","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Link, Switch } from 'react-router-dom';\n\nconst Login = ({ setIsLoggedIn, isLoggedIn, userToken, setUserToken }) => {\n    const [usernameString, setUsernameString] = useState('');\n    const [passwordString, setPasswordString] = useState('');\n\n    function loginUser(username, password) {\n\n        fetch(`https://strangers-things.herokuapp.com/api/2105-vpi-web-pt/users/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password\n                }\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n                setIsLoggedIn(true)\n                setUserToken(result.data.token)\n                localStorage.setItem('token', result.data.token)\n                return result\n            })\n            .catch(console.error)\n    };\n\n    function logoutUser() {\n        setIsLoggedIn(false)\n        setUserToken('')\n    }\n\n    return (\n        <>\n            <div className='Login'>\n                <h1>Login</h1>\n\n                <input className=\"usernameValue\"\n                    type=\"username\"\n                    value={usernameString}\n                    onChange={function (event) {\n                        setUsernameString(event.target.value);\n                    }}>\n                </input>\n\n                <input className=\"passwordValue\"\n                    type=\"password\"\n                    value={passwordString}\n                    onChange={function (event) {\n                        setPasswordString(event.target.value);\n                    }}>\n                </input>\n\n\n                <button className=\"loginBtn\" onClick={() => {\n                    loginUser(usernameString, passwordString)\n                }\n                }\n                >Login</button> <br></br><br></br>\n            </div>\n        </>\n    )\n}\n\n\nexport default Login;","import React, { useEffect, useState } from 'react';\n\nconst Register = ({ setIsLoggedIn, setUserToken }) => {\n    const [usernameString, setUsernameString] = useState('');\n    const [passwordString, setPasswordString] = useState('');\n    \n    function registerUser(username, password) {\n\n        fetch('https://strangers-things.herokuapp.com/api/2105-vpi-web-pt/users/register', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                    username: username,\n                    password: password,\n                },\n            }),\n        })\n            .then(response => response.json())\n            .then(result => {\n                if (result.success) {\n                    setIsLoggedIn(true)\n                    setUserToken(result.data.token)\n                    localStorage.setItem(\"token\", result.data.token)\n                }\n\n                return result\n            })\n            .catch(console.error)\n\n    };\n\n    return (\n\n        <div className='Register'>\n\n            <h1>Register</h1>\n\n            <input className=\"usernameValue\"\n                type=\"username\"\n                value={usernameString}\n                onChange={(event) => {\n                    setUsernameString(event.target.value)\n                }}>\n            </input>\n\n            <input className=\"passwordValue\"\n                type=\"password\"\n                value={passwordString}\n                onChange={(event) => {\n                    setPasswordString(event.target.value);\n                }}>\n            </input>\n\n            <button className=\"registerbtn\" onClick={\n                () => {\n                    registerUser(usernameString, passwordString)\n\n                }}\n            >Register</button>\n\n        </div>\n    )\n}\n\nexport default Register;\n","import { useState, useEffect } from 'react'\n\nconst Featuredmessageform = (props) => {\n\n    const [messageContent, setContent] = useState('')\n    const { renderMessageForm, recipientUsername, recipientTitle, postId } = props\n    const userToken = localStorage.getItem(\"token\")\n\n    function sendMessage() {\n        fetch(`https://strangers-things.herokuapp.com/api/2105-VPI-WEB-PT/posts/${postId}/messages`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + userToken\n            },\n            body: JSON.stringify({\n                'message': {\n                    'content': messageContent\n                }\n            })\n        }).then(result => {\n            console.log(result)\n        }).catch(console.error)\n    }\n\n    function cancelMessage() {\n        renderMessageForm(false)\n    }\n\n    return <>\n\n        <div className=\"featuredmessageform\">\n            <span>To:{recipientUsername}  </span>\n            <br></br>\n            <span>In Response to post: {recipientTitle} </span>\n            <br></br>\n            <br></br>\n            <span>Message Body:</span>\n            <br></br>\n            <input onChange={function (event) {\n                setContent(event.target.value)\n                console.log(messageContent)\n            }}></input>\n            <button className=\"send\" onClick={function () {\n                sendMessage()\n                renderMessageForm(false)\n            }}>Send</button>\n            <button onClick={() => {\n                cancelMessage()\n            }}>Cancel</button>\n        </div>\n    </>\n}\nexport default Featuredmessageform","import React, { useState, useEffect } from 'react';\nimport Featuredmessageform from './featuredmessageform.js'\n\nconst Postdetails = (props) => {\n    const { featuredResult, setIsLoggedIn, setUserToken, clickedMessage, renderMessageForm } = props\n    const [postId, setPostId] = useState('')\n    const [recipientUsername, setRecipientUsername] = useState('')\n    const [recipientTitle, setRecipientTitle] = useState('')\n    const [username, setUsername] = useState('')\n    const userToken = localStorage.getItem(\"token\")\n\n\n    function logoutUser() {\n        setIsLoggedIn(false)\n        setUserToken('')\n        localStorage.removeItem('token')\n    }\n\n\n\n    if (!featuredResult) {\n        return (<><div className=\"postdetails\">\n            <h1>Featured Post</h1>\n            <span className=\"clickformore\">Click a Post for more info!</span>\n            <button className=\"logOutinFeaturePost\" onClick={() => {\n                logoutUser()\n            }}>LogOut</button>\n        </div></>)\n    }\n\n    const { title, price, location, description, willDeliver } = featuredResult\n\n    return (<>\n        <div className=\"postdetails\">\n            <h1>Featured Post</h1>\n\n            <div key=\"featuredresult\">\n                <div className='featuredtitle'> Title:{featuredResult.title} </div>\n                <div className='featuredprice'>Price: {featuredResult.price}</div>\n                <div className='featureddescription'>Description: {featuredResult.description}</div>\n                <div className='featuredlocation'>Location: {featuredResult.location}</div>\n                <button className=\"replybtn\" onClick={\n                    function () {\n                        renderMessageForm(true)\n                        setPostId(featuredResult._id)\n                        setRecipientUsername(featuredResult.author.username)\n                        setRecipientTitle(featuredResult.title)\n                        console.log(recipientUsername)\n                        console.log(recipientTitle)\n                        \n                    }\n                }>Reply</button>\n\n                <button className=\"logOutBtn\" onClick={() => {\n                    logoutUser()\n                }}>LogOut</button>\n                {clickedMessage ? <Featuredmessageform clickedMessage={clickedMessage} renderMessageForm={renderMessageForm} postId={postId} recipientUsername={recipientUsername} recipientTitle={recipientTitle} /> : null}\n            </div>\n        </div>\n\n    </>)\n\n}\n\nexport default Postdetails;","import { useState } from \"react\"\nimport React from 'react'\n\nconst Editpostform = ({ myPostTitle, setWantsToEdit, wantsToEdit, postId }) => {\n\n    const userToken = localStorage.getItem(\"token\")\n    const [titleString, setTitleString] = useState('')\n    const [descriptionString, setDescriptionString] = useState('')\n    const [priceString, setPriceString] = useState('')\n    const [locationString, setLocationString] = useState('')\n    const [willDeliver, setWillDeliver] = useState(false)\n    console.log(postId)\n\n    function editPost(titleString, descriptionString, priceString, locationString, willDeliver) {\n        fetch(`https://strangers-things.herokuapp.com/api/2105-vpi-web-pt/posts/${postId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + userToken\n            },\n            body: JSON.stringify({\n                post: {\n                    title: titleString,\n                    description: descriptionString,\n                    price: priceString,\n                    location: locationString,\n                    willDeliver: willDeliver,\n                }\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n                result\n            })\n    }\n    function cancelEdit() {\n        setWantsToEdit(false)\n    }\n\n    return <>\n        <div className=\"editpostform\">\n            <h1 className=\"editposttext\">Edit Your Post: {myPostTitle}</h1>\n            <label className=\"editnewtitle\">Title: </label>\n            <input className=\"edittitleinput\" type=\"text\" value={titleString} onChange={event => { setTitleString(event.target.value) }}></input>\n            <label className=\"editnewdescription\">Description: </label>\n            <input className=\"editdescriptioninput\" type=\"text\" value={descriptionString} onChange={event => { setDescriptionString(event.target.value) }}></input>\n            <label className=\"editnewprice\">Price: </label>\n            <input className=\"editpriceinput\" type=\"text\" value={priceString} onChange={event => { setPriceString(event.target.value) }}></input>\n            <label className=\"editnewlocation\">Location: </label>\n            <input className=\"editlocationinput\" type=\"text\" value={locationString} onChange={event => { setLocationString(event.target.value) }}></input>\n            <label className=\"editnewwilldeliver\">Will Deliver? :</label>\n            <input className=\"editwilldeliverselection\" type=\"checkbox\" value={willDeliver} onChange={event => setWillDeliver(true)}></input>\n            <button className=\"editbtn\" onClick={function () { editPost(titleString, descriptionString, priceString, locationString, willDeliver) }}>Edit Post</button>\n            <button className=\"canceleditbtn\" onClick={cancelEdit}>Cancel</button>\n        </div>\n    </>\n\n\n}\n\nexport default Editpostform","import React, { useState, useEffect } from 'react'\n\nimport Editpostform from './editpostform.js'\n\nconst Userposts = ({userToken}) => {\n    const [myPosts, setMyPosts] = useState([])\n    // const userToken = localStorage.getItem(\"token\")\n    const [titleString, setTitleString] = useState('')\n    const [descriptionString, setDescriptionString] = useState('')\n    const [priceString, setPriceString] = useState('')\n    const [locationString, setLocationString] = useState('')\n    const [willDeliver, setWillDeliver] = useState(false)\n    const [wantsToEdit, setWantsToEdit] = useState(false)\n    const [myPostTitle, setMyPostTitle] = useState('')\n    const [postId, setPostId] = useState('')\n    const toggleChecked = () => setWillDeliver(value => !value)\n\n    useEffect(() => {\n        const fetchMyPosts = async () => {\n            const resp = await fetch('https://strangers-things.herokuapp.com/api/2105-VPI-WEB-PT/users/me', {\n                method: \"GET\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + userToken\n                }\n            })\n            const data = await resp.json()\n            const myPosts = data.data.posts\n            setMyPosts(myPosts)\n        }\n        fetchMyPosts();\n    }, [])\n\n    function newPost(titleString, descriptionString, priceString, locationString, willDeliver) {\n        fetch('https://strangers-things.herokuapp.com/api/2105-vpi-web-pt/posts', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + userToken\n            },\n            body: JSON.stringify({\n                post: {\n                    title: titleString,\n                    description: descriptionString,\n                    price: priceString,\n                    location: locationString,\n                    willDeliver: willDeliver\n                }\n            })\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n                result\n            })\n\n    }\n\n    function deletePost() {\n        fetch(`https://strangers-things.herokuapp.com/api/2105-vpi-web-pt/posts/${postId}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + userToken\n            },\n        }).then(response => response.json())\n            .then(result => {\n                console.log(result)\n                result\n            })\n    }\n\n    return (<>\n        <div className=\"allmyposts\">\n\n            <div className=\"myposts\">\n                <h1>POSTLIST</h1>\n                {myPosts.map(post => <div key={post._id}>\n                    <div className='usertitle'> Title: {post.title} </div>\n                    <div className='userdescription'> Description: {post.description}  </div>\n                    <div className='userprice'> Price: {post.price}  </div>\n                    <div className='userlocation'> Location: {post.location}</div>\n                    <button className=\"usereditbtn\" onClick={function () { setWantsToEdit(true), console.log(post._id), setMyPostTitle(post.title), setPostId(post._id) }}>Edit</button>\n                    <button className=\"userdeletebtn\" onClick={function () { setPostId(post._id), deletePost() }}>Delete</button>\n                </div>)}\n\n            </div>\n\n            {wantsToEdit ? <Editpostform myPostTitle={myPostTitle} wantsToEdit={wantsToEdit} setWantsToEdit={setWantsToEdit} postId={postId} /> : null}\n\n            <div className=\"newpost\">\n                <h1 className=\"creatnewposttext\">CREATE NEW POST</h1>\n                <label className=\"newtitle\">Title</label>\n                <input className=\"titleinput\" type=\"text\" value={titleString} onChange={event => { setTitleString(event.target.value) }}></input>\n                <label className=\"newdescription\">Description</label>\n                <input className=\"descriptioninput\" type=\"text\" value={descriptionString} onChange={event => { setDescriptionString(event.target.value) }}></input>\n                <label className=\"newprice\">Price</label>\n                <input className=\"priceinput\" type=\"text\" value={priceString} onChange={event => { setPriceString(event.target.value) }}></input>\n                <label className=\"newlocation\">Location</label>\n                <input className=\"locationinput\" type=\"text\" value={locationString} onChange={event => { setLocationString(event.target.value) }}></input>\n                <label className=\"newwilldeliver\">Will Deliver :</label>\n\n                <input id=\"willdeliverselection\" type=\"checkbox\" onChange={function (event) { setWillDeliver(true) }}></input>\n\n\n                <button className=\"createbtn\" onClick={function () { newPost(titleString, descriptionString, priceString, locationString, willDeliver) }}>Create Post</button>\n\n            </div>\n\n\n        </div>\n    </>)\n}\n\nexport default Userposts","import React from 'react'\nimport { useState, useEffect } from 'react'\n\nconst Newmessageform = (props) => {\n    const [messageContent, setContent] = useState('')\n    const { clickedMessage, renderMessageForm, recipientUsername, recipientTitle, postId } = props\n    const userToken = localStorage.getItem(\"token\")\n\n    function sendMessage() {\n        fetch(`https://strangers-things.herokuapp.com/api/2105-VPI-WEB-PT/posts/${postId}/messages`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + userToken\n            },\n            body: JSON.stringify({\n                'message': {\n                    'content': messageContent\n                }\n            })\n        }).then(result => {\n            console.log(result)\n        }).catch(console.error)\n    }\n\n    function cancelMessage() {\n        renderMessageForm(false)\n    }\n\n    return <>\n\n        <div className=\"newmessageform\">\n            <span>To: {recipientUsername}  </span>\n            <br></br>\n            <span>In Response to post: {recipientTitle} </span>\n            <br></br>\n            <br></br>\n            <span>Message Body:</span>\n            <br></br>\n            <input onChange={function (event) {\n                setContent(event.target.value)\n                console.log(messageContent)\n            }}></input>\n            <button className=\"send\" onClick={function () {\n                sendMessage()\n                renderMessageForm(false)\n            }}>Send</button>\n            <button onClick={() => {\n                cancelMessage()\n            }}>Cancel</button>\n        </div>\n    </>\n\n\n\n}\n\n\nexport default Newmessageform","import React, { useState, useEffect } from \"react\"\nimport Newmessageform from './newmessageform.js'\n\nconst Messages = ({userToken}) => {\n\n    // const userToken = localStorage.getItem(\"token\")\n    const [messages, setMessages] = useState([])\n    const [clickedMessage, renderMessageForm] = useState(false)\n    const [postId, setPostId] = useState('')\n    const [recipientUsername, setRecipientUsername] = useState('')\n    const [recipientTitle, setRecipientTitle] = useState('')\n    const [username, setUsername] = useState('')\n\n    useEffect(() => {\n        const fetchMessages = async () => {\n            const resp = await fetch('https://strangers-things.herokuapp.com/api/2105-VPI-WEB-PT/users/me', {\n                method: \"GET\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${userToken}`\n                }\n            })\n                .then(response => response.json())\n                .then(result => {\n                    const username = result.data.username\n                    setUsername(username)\n                    const messages = result.data.messages\n                    setMessages(messages)\n                })\n        }\n        fetchMessages();\n    }, [])\n\n    return <>\n        <div className=\"sendandreceived\">\n\n            <div className=\"received\">\n                <h1 className=\"mssgetext\">Messages</h1>\n                {messages.map((message, index) => {\n                    return <>\n\n                        <div className=\"message\" key={index}>\n                            <div className=\"mssgusername\">From: {message.fromUser.username}</div>\n                            <div className='mssgtitle'> Title:{message.post.title} </div>\n                            <div className='mssgdescription'> Body: {message.content} </div>\n                            {message.fromUser.username === username ? null :\n                                <button className=\"mssgreply\" disabled={clickedMessage} onClick={() => {\n                                    setPostId(message.post._id)\n                                    console.log(postId)\n\n                                    setRecipientUsername(message.fromUser.username)\n                                    setRecipientTitle(message.post.title)\n                                    console.log(recipientUsername)\n                                    console.log(message.fromUser.username)\n                                    renderMessageForm(true)\n                                }}>Reply</button>}\n\n                        </div>\n                    </>\n                })}\n            </div>\n            <div className=\"newmessageformshow\">\n                {clickedMessage ? <Newmessageform recipientUsername={recipientUsername} recipientTitle={recipientTitle} postId={postId} setPostId={setPostId} clickedMessage={clickedMessage} renderMessageForm={renderMessageForm} /> : null}\n            </div>\n        </div> </>\n}\n\nexport default Messages\n","import React from 'react'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport Postdetails from './postdetails.js'\nimport Userposts from './userposts.js'\nimport Messages from './messages.js'\nimport Newmessageform from './newmessageform.js'\n\nconst Profile = ({userToken}) => {\n\n    const [clickedMessage, renderMessageForm] = useState()\n    return (\n        <Router>\n            <div>\n                <img className=\"logo\" src='https://placekitten.com/50/50'></img>\n                <nav className=\"navi\">\n                    <div className='naviHome'><Link to=\"/\">Home</Link></div>\n                    <div className='naviPost'><Link to=\"/myposts\">My Posts</Link></div>\n                    <div className='naviMessage'><Link to=\"/mymessages\">Messages</Link></div>\n\n                </nav>\n                <Switch>\n                    <Route path=\"/myposts\">\n                        <Userposts userToken={userToken} />\n                    </Route>\n                    <Route path=\"/mymessages\">\n                        <Messages userToken={userToken} />\n                        {clickedMessage ? <Newmessageform clickedMessage={clickedMessage} renderMessageForm={renderMessageForm} messageContent={messageContent} setContent={setContent} /> : null}\n                    </Route>\n                    <Route exact path=\"/\">\n                        <div className=\"welcome\">WELCOME TO SNAP ATTACK!!!</div>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default Profile;","import React, { useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\n\n\nimport Posts from './components/post.js';\nimport Login from './components/login.js';\nimport Register from './components/register.js';\nimport Postdetails from './components/postdetails.js'\nimport Profile from './components/profile.js'\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userToken, setUserToken] = useState('')\n  const [featuredResult, setFeaturedResult] = useState(null)\n  const [clickedMessage, renderMessageForm] = useState(false)\n  const [showRegister, setShowRegister] = useState(false)\n\n  useEffect(()=> {\n    \n      if (localStorage.getItem(\"token\") ){  \n        setUserToken( localStorage.getItem(\"token\") )\n      } \n  }, [userToken])\n\n  return <div id=\"app\">\n    <div className=\"rightAndLeftScreen\">\n      <div className=\"PostsScreen\">\n        <Posts\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          userToken={userToken}\n          setUserToken={setUserToken}\n          featuredResult={featuredResult}\n          setFeaturedResult={setFeaturedResult}\n          clickedMessage={clickedMessage}\n          renderMessageForm={renderMessageForm}\n        />\n      </div>\n\n      <div className=\"rightviewport\">\n        <Router>\n          { userToken ? <Postdetails featuredResult={featuredResult} setFeaturedResult={setFeaturedResult} isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}\n            userToken={userToken} setUserToken={setUserToken} clickedMessage={clickedMessage} renderMessageForm={renderMessageForm} /> : <Login isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn} userToken={userToken} setUserToken={setUserToken} />}\n\n          <div className=\"signup\">\n            {isLoggedIn ? <h3>YOUR ARE LOGGED IN!</h3> :\n              <h3>\n                <Route>\n                  {showRegister ?\n                    <Register\n                      isLoggedIn={isLoggedIn}\n                      setIsLoggedIn={setIsLoggedIn}\n                      userToken={userToken}\n                      setUserToken={setUserToken} />\n                    : <Link className='registerbtn' onClick={() => {\n                      setShowRegister(true)\n                      console.log(showRegister)\n                    }}>\n                      New to Snap Attack? Sign up here!\n                    </Link>\n                  }\n                </Route>\n              </h3>\n            }\n          </div>\n        </Router>\n      </div>\n    </div>\n    <div className=\"profileandmessages\">\n      {isLoggedIn&&userToken ? <Profile\n        clickedMessage={clickedMessage} renderMessageForm={renderMessageForm} setIsLoggedIn={setIsLoggedIn} isLoggedIn={setIsLoggedIn} setUserToken={setUserToken} userToken={userToken} /> : null}\n    </div>\n  </div>\n}\n\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}